DAY-1-TASK

1.Difference between HTTP1.1 vs HTTP2.

HTTP1.1

*It works on the textual format.
*There is head of line blocking that blocks all the requests behind it until it doesn’t get its all resources.
*It uses requests resource Inlining for use getting multiple pages.
*It compresses data by itself.

HTTP2

*It works on the binary protocol.
*It allows multiplexing so one TCP connection is required for multiple requests.
*It uses PUSH frame by server that collects all multiple pages.
*It uses HPACK for data compression.

2.Objects and its internal representations in js.

Objects, in JavaScript, are the most important data type and form the building blocks for modern JavaScript. These objects are quite different from JavaScript’s primitive data types (Number, String, Boolean, null, undefined, and symbol) in the sense that these primitive data types all store a single value each (depending on their types).
A JavaScript object has properties associated with it. A property of an object can be explained as a variable that is attached to the object. Object properties are basically the same as ordinary JavaScript variables, except for the attachment to objects. The properties of an object define the characteristics of the object. We can access the properties of an object with a simple dot-notation:

objectName.propertyName

*Like all JavaScript variables, both the object name (which could be a normal variable) and property name are case sensitive. You can define a property by assigning it a value. For example, let’s create an object named myCar and give it properties named make, model, and year as follows:


var myCar = new Object();
myCar.make = ‘Ford’;
myCar.model = ‘Mustang’;
myCar.year = 1969;


*The above example could also be written using an object initializer, which is a comma-delimited list of zero or more pairs of property names and associated values of an object, enclosed in curly braces ({}):

var myCar = {
make: ‘Ford’,
model: ‘Mustang’,
year: 1969
};
___